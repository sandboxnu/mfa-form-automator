name: CI
on:
  pull_request: ~
  push:
    branches:
      - master
      - releases/*
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.yarn
          key: deps-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: deps-${{ runner.os }}-
  lint:
    runs-on: ubuntu-latest
    needs: setup
    name: Run eslint/format
    steps:
      - uses: actions/checkout@v3
      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.yarn
          key: deps-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Lint
        run: yarn lint
      - name: Prettier
        run: yarn workspaces run prettier . --check

  tsc:
    runs-on: ubuntu-latest
    needs: setup
    name: Check tsc
    steps:
      - uses: actions/checkout@v3
      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.yarn
          key: deps-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: tsc
        run: yarn tsc

  jest:
    runs-on: ubuntu-latest
    needs: setup
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    name: Run tests
    steps:
      - uses: actions/checkout@v3
      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.yarn
          key: deps-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Wait for PostgreSQL to be ready
        run: until pg_isready -h localhost -p 5432; do sleep 1; done
      - name: Run Prisma Migrations
        run: yarn --cwd apps/server prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/db?schema=public
      - name: Run tests
        run: yarn test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/db?schema=public
          POSTMARK_SERVER_KEY: ${{ secrets.POSTMARK_SERVER_KEY }}
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}

  build-backend-image:
    runs-on: ubuntu-latest
    needs: setup
    name: Build backend image
    steps:
      - uses: actions/checkout@v3
      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.yarn
          key: deps-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Build Docker image for backend
        run: yarn backend:docker:build
